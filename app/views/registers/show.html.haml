- @page_title = "#{@register.register_name.capitalize} register"
- @page_description = ""
- content_for :body_classes, 'register-show'

%nav.breadcrumbs{role: "Navigation", "aria-label" => "Breadcrumb"}
  %ol{data: {"click-events" => "", "click-category" => "Header", "click-action" => "Breadcrumb Clicked"}}
    %li.breadcrumbs__item
      = link_to 'Components', 'https://www.gov.uk/service-toolkit#components'
    %li.breadcrumbs__item
      = link_to 'GOV.UK Registers', root_path
    %li.breadcrumbs__item
      = link_to 'Get data', registers_path
    %li.breadcrumbs__item.breadcrumbs__item--active
      = link_to "#{@register.register_name} register", '#content', 'aria-current' => 'page'

%main#content.container{role:'main'}

  - if @register.register_phase != 'Beta'
    .grid-row
      .column-two-thirds
        .panel.panel-border-wide
          %span.phase-banner In progress
          %p This data is in progress and itâ€™s not ready for use. #{link_to 'Contact the team', support_path} to give us feedback.

  .grid-row
    .column-two-thirds
      %h1.heading-large
        #{@register.register_name} register
        %span.heading-secondary= @register.register_description

      %p.font-xsmall Last updated: #{link_to formatted_date(@register.register_last_updated), register_entries_path(@register.slug)}

      %details{role: "group"}
        %summary{"aria-controls" => "details-content-1", "aria-expanded" => "false", :role => "button"}
          %span.summary What fields are included in this register?
        #details-content-1.panel.panel-border-narrow{"aria-hidden" => "true"}
          .govuk-metadata
            %dl
              - @register.register_fields.each do |field|
                %dt= field['field']
                %dd= field['text']

    .column-one-third
      - if @register.register_authority.present?
        %h3.heading-small Managed by:
        %div{class: "govuk-organisation-logo #{@register.register_authority.data['name'].parameterize}"}
          %div{class: "logo-container #{crest_class_name(@register.register_authority.data['name'].parameterize)}"}
            %span= @register.register_authority.data['name']
        %h4.heading-small Use this register
        %p= link_to "View the API", @register.url

  .grid-row
    .column-full
      .search-records-wrapper#search_wrapper
        .grid-row
          = form_tag register_path(@register.slug, anchor: 'search_wrapper'), method: :get, id: 'search_records' do
            .column-one-third
              .records-search
                = label_tag 'Search', nil, class: 'visually-hidden', for: 'q'
                = search_field_tag 'q', nil, class: 'search-input', placeholder: 'Search', value: params[:q]
                = submit_tag 'Search', name: nil, class: 'search-submit'
            .column-full
              %details{role: "group", open: (params[:status].present? ? 'open' : nil)}
                %summary{"aria-controls" => "details-content-0", "aria-expanded" => "#{params[:status].present? ? 'true' : 'false'}", role: "button"}
                  %span.summary Filter
                #details-content-0{"aria-hidden" => "#{params[:status].present? && @records.present? ? 'false' : 'true'}"}
                  .grid-row
                    .column-full
                      .form-group
                        %fieldset.inline
                          %legend.visually-hidden Filter
                          .multiple-choice
                            = radio_button_tag 'status', 'current', params[:status] == 'current' || !params[:status].present? ?  'true' : nil
                            = label_tag 'Current records', nil, for: 'status_current'
                          .multiple-choice
                            = radio_button_tag 'status', 'archived', params[:status] == 'archived' ?  'true' : nil
                            = label_tag 'Archived records', nil, for: 'status_archived'
                          .multiple-choice
                            = radio_button_tag 'status', 'all', params[:status] == 'all' ?  'true' : nil
                            = label_tag 'Both', nil, for: 'status_all'
                        = submit_tag 'Search', name: nil, class: 'button filter-search-submit'


      - if @records.present?
        .records-count
          %span#records-count
            = render partial: 'showing'
          - if params[:q].present? || params[:status].present?
            = link_to 'Reset', register_path(@register.slug, anchor: 'records_wrapper'), class: 'reset-link'

        .table-scroll
          %table.register-data-table
            %thead
              %tr
                - @register.register_fields.each do |field|
                  %th= field['cardinality'] == '1' ? records_table_sort_link(field['field'], request.query_parameters) : field['field']
            %tbody#records-tbody
              = render partial: 'record', collection: @records

        .pager
          .pager-controls
            = paginate @records, outer_window: 0, window: 3
          .pager-summary
            = render partial: 'showing'

        - unless @records.last_page?
          = link_to_next_page @records, 'Load more', id: 'load-more-records', class: 'js-hidden', remote: true

      - else
        .no-search-results
          %p
            - if params[:q].present?
              No results found for <strong>"#{params[:q]}"</strong>
            - else
              No results found.
            - if params[:q].present? || params[:status].present?
              = link_to 'Reset', register_path(@register.slug, anchor: 'search_wrapper'), class: 'reset-link'

= content_for :javascript do
  :javascript
    $("input[name='status']").change(function () {
      $('#search_records').submit();
    });
    $('.tabs-container').tabs();
